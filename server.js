const express = require('express');
const cors = require('cors');
const axios = require('axios');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;
const ADMIN_ID = process.env.ADMIN_ID;
const SUPABASE_URL = process.env.SUPABASE_URL;
const SUPABASE_KEY = process.env.SUPABASE_KEY;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if (!BOT_TOKEN || !ADMIN_ID || !SUPABASE_URL || !SUPABASE_KEY) {
  console.error('‚ö†Ô∏è  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ!');
}

// Supabase –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
const { createClient } = require('@supabase/supabase-js');
const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (orderId -> userId)
const pendingReceipts = new Map();

// API: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ Telegram
app.post('/api/send-order', async (req, res) => {
  try {
    const { 
      orderId, 
      date, 
      customerName, 
      customerPhone, 
      customerComment,
      telegramUserId, 
      telegramUsername, 
      items, 
      total,
      paymentEnabled,
      kaspiPhone,
      kaspiLink
    } = req.body;

    if (!orderId || !items || !total) {
      return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞' });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    let message = "üÜï <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó!</b>\n\n";
    message += `üìã –ó–∞–∫–∞–∑ #${orderId.slice(-6)}\n`;
    message += `üìÖ ${new Date(date).toLocaleString('ru-RU')}\n\n`;
    
    message += "<b>üë§ –ö–ª–∏–µ–Ω—Ç:</b>\n";
    message += `–ò–º—è: ${customerName}\n`;
    message += `–¢–µ–ª–µ—Ñ–æ–Ω: ${customerPhone}\n`;
    if (telegramUsername) message += `Telegram: @${telegramUsername}\n`;
    if (telegramUserId) message += `ID: ${telegramUserId}\n`;
    if (customerComment) message += `\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${customerComment}\n`;
    
    message += "\n<b>üõí –¢–æ–≤–∞—Ä—ã:</b>\n";
    items.forEach(item => {
      message += `‚Ä¢ ${item.name} x${item.quantity} = ${item.price * item.quantity} ‚Ç∏\n`;
    });
    
    message += `\n<b>üí∞ –ò—Ç–æ–≥–æ: ${total} ‚Ç∏</b>`;

    if (paymentEnabled) {
      message += `\n\n‚è∞ <b>–°—Ç–∞—Ç—É—Å:</b> –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã`;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: ADMIN_ID,
      text: message,
      parse_mode: 'HTML'
    });

    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã –ø–ª–∞—Ç–µ–∂–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç—É
    if (paymentEnabled && telegramUserId) {
      let paymentMessage = "üí≥ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã / –¢”©–ª–µ–º –¥–µ—Ä–µ–∫—Ç–µ–º–µ–ª–µ—Ä—ñ</b>\n\n";
      paymentMessage += `üìã –ó–∞–∫–∞–∑ / –¢–∞–ø—Å—ã—Ä—ã—Å #${orderId.slice(-6)}\n`;
      paymentMessage += `üí∞ –°—É–º–º–∞ / –°–æ–º–∞—Å—ã: <b>${total} ‚Ç∏</b>\n\n`;
      
      if (kaspiPhone) {
        paymentMessage += `üì± <b>Kaspi –Ω–æ–º–µ—Ä:</b>\n+7${kaspiPhone}\n\n`;
      }
      
      paymentMessage += "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞.\n";
      paymentMessage += "–¢”©–ª–µ–≥–µ–Ω–Ω–µ–Ω –∫–µ–π—ñ–Ω —Ç”©–º–µ–Ω–¥–µ–≥—ñ –±–∞—Ç—ã—Ä–º–∞–Ω—ã –±–∞—Å—ã–ø, —á–µ–∫—Ç—ñ“£ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã–Ω –∂—ñ–±–µ—Ä—ñ“£—ñ–∑.\n\n";
      paymentMessage += "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! / –¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑“ì–∞ —Ä–∞—Ö–º–µ—Ç! ‚ù§Ô∏è";

      const keyboard = {
        inline_keyboard: []
      };

      // –ö–Ω–æ–ø–∫–∞ Kaspi –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞
      if (kaspiLink) {
        keyboard.inline_keyboard.push([
          { text: "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Kaspi", url: kaspiLink }
        ]);
      }

      // –ì–õ–ê–í–ù–ê–Ø –ö–ù–û–ü–ö–ê - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫
      keyboard.inline_keyboard.push([
        { text: "üì§ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data: `receipt_${orderId}` }
      ]);

      await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        chat_id: telegramUserId,
        text: paymentMessage,
        parse_mode: 'HTML',
        reply_markup: keyboard
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å orderId -> userId –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ–∫–∞
      pendingReceipts.set(orderId, {
        userId: telegramUserId,
        orderNumber: orderId.slice(-6),
        total: total,
        customerName: customerName
      });
    }

    res.json({ success: true, message: '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ 
      error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞',
      details: error.message 
    });
  }
});

// API: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
app.post('/api/notify-status', async (req, res) => {
  try {
    const { userId, status, orderNumber, shopPhone } = req.body;

    if (!userId || !status || !orderNumber) {
      return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' });
    }

    let message = '';
    
    switch (status) {
      case 'processing':
        message = `‚è≥ <b>–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É! / –¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑ –æ—Ä—ã–Ω–¥–∞–ª—É–¥–∞!</b>\n\n`;
        message += `üìã –ó–∞–∫–∞–∑ / –¢–∞–ø—Å—ã—Ä—ã—Å #${orderNumber}\n`;
        message += `–ú—ã –Ω–∞—á–∞–ª–∏ –≥–æ—Ç–æ–≤–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑. –°–∫–æ—Ä–æ –æ–Ω –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤! üë®‚Äçüç≥\n`;
        message += `–¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑–¥—ã –¥–∞–π—ã–Ω–¥–∞—É–¥—ã –±–∞—Å—Ç–∞–¥—ã“õ. –ñ–∞“õ—ã–Ω–¥–∞ –¥–∞–π—ã–Ω –±–æ–ª–∞–¥—ã!`;
        break;
        
      case 'completed':
        message = `üéâ <b>–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤! / –¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑ –¥–∞–π—ã–Ω!</b>\n\n`;
        message += `üìã –ó–∞–∫–∞–∑ / –¢–∞–ø—Å—ã—Ä—ã—Å #${orderNumber}\n`;
        message += `–ú–æ–∂–µ—Ç–µ –∑–∞–±–∏—Ä–∞—Ç—å –∏–ª–∏ –æ–∂–∏–¥–∞–π—Ç–µ –∫—É—Ä—å–µ—Ä–∞! üöó\n`;
        message += `–ê–ª—ã–ø –∫–µ—Ç—É–≥–µ –±–æ–ª–∞–¥—ã –Ω–µ–º–µ—Å–µ –∫—É—Ä—å–µ—Ä–¥—ñ –∫“Ø—Ç—ñ“£—ñ–∑!\n\n`;
        message += `–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! / –¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑“ì–∞ —Ä–∞—Ö–º–µ—Ç! ‚ù§Ô∏è`;
        break;
        
      case 'cancelled':
        message = `‚ùå <b>–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω / –¢–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑ –∂–æ–π—ã–ª–¥—ã</b>\n\n`;
        message += `üìã –ó–∞–∫–∞–∑ / –¢–∞–ø—Å—ã—Ä—ã—Å #${orderNumber}\n`;
        message += `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑. –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è.\n`;
        message += `”®–∫—ñ–Ω—ñ—à–∫–µ –æ—Ä–∞–π, —Ç–∞–ø—Å—ã—Ä—ã—Å—ã“£—ã–∑–¥—ã –æ—Ä—ã–Ω–¥–∞–π –∞–ª–º–∞–π–º—ã–∑. –ö–µ—à—ñ—Ä—ñ–º —Å“±—Ä–∞–π–º—ã–∑.\n\n`;
        if (shopPhone) {
          message += `–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: ${shopPhone}\n`;
          message += `–°“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –±–æ–ª—Å–∞, –±—ñ–∑–±–µ–Ω —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑: ${shopPhone}`;
        }
        break;

      case 'pending_payment':
        message = `‚è∞ <b>–û–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—É / –¢”©–ª–µ–º–¥—ñ –∫“Ø—Ç—É–¥–µ</b>\n\n`;
        message += `üìã –ó–∞–∫–∞–∑ / –¢–∞–ø—Å—ã—Ä—ã—Å #${orderNumber}\n`;
        message += `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫.\n`;
        message += `”®—Ç—ñ–Ω–µ–º—ñ–∑, —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ç”©–ª–µ–ø, —á–µ–∫—Ç—ñ –∂—ñ–±–µ—Ä—ñ“£—ñ–∑.`;
        break;
        
      default:
        return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å' });
    }

    await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: userId,
      text: message,
      parse_mode: 'HTML'
    });

    res.json({ success: true });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' });
  }
});

// WEBHOOK –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –≤ URL)
app.post('/webhook', async (req, res) => {
  console.log('üì© –ü–æ–ª—É—á–µ–Ω webhook –∑–∞–ø—Ä–æ—Å –Ω–∞ /webhook:', JSON.stringify(req.body, null, 2));
  await handleWebhook(req, res);
});

app.post(`/bot${BOT_TOKEN}`, async (req, res) => {
  console.log('üì© –ü–æ–ª—É—á–µ–Ω webhook –∑–∞–ø—Ä–æ—Å –Ω–∞ /bot${BOT_TOKEN}:', JSON.stringify(req.body, null, 2));
  await handleWebhook(req, res);
});

// –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook
async function handleWebhook(req, res) {
  try {
    const update = req.body;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫ (–Ω–∞–∂–∞—Ç–∏–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É")
    if (update.callback_query) {
      const callbackQuery = update.callback_query;
      const data = callbackQuery.data;
      const chatId = callbackQuery.message.chat.id;
      const messageId = callbackQuery.message.message_id;

      // –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É"
      if (data.startsWith('receipt_')) {
        const orderId = data.replace('receipt_', '');
        
        // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/answerCallbackQuery`, {
          callback_query_id: callbackQuery.id,
          text: 'üì∏ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞'
        });

        // –ü—Ä–æ—Å–∏–º –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
          chat_id: chatId,
          text: "üì∏ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ</b>\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\nüá∞üáø <b>–¢”©–ª–µ–º —á–µ–≥—ñ–Ω—ñ“£ —Ñ–æ—Ç–æ—Å—ã–Ω –∂—ñ–±–µ—Ä—ñ“£—ñ–∑</b>",
          parse_mode: 'HTML'
        });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º, —á—Ç–æ –∂–¥—ë–º —Ñ–æ—Ç–æ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        pendingReceipts.set(`waiting_${chatId}`, orderId);
      }

      // –ê–¥–º–∏–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É
      if (data.startsWith('confirm_payment_')) {
        const orderId = data.replace('confirm_payment_', '');
        
        // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î –Ω–∞ processing
        await supabase
          .from('orders')
          .update({ status: 'processing' })
          .eq('id', orderId);

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        const { data: order } = await supabase
          .from('orders')
          .select('*')
          .eq('id', orderId)
          .single();

        if (order && order.telegram_user_id) {
          // –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
          await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            chat_id: order.telegram_user_id,
            text: `‚úÖ <b>–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>\n\nüìã –ó–∞–∫–∞–∑ #${orderId.slice(-6)}\n\n–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç—É! üë®‚Äçüç≥`,
            parse_mode: 'HTML'
          });
        }

        // –û—Ç–≤–µ—á–∞–µ–º –∞–¥–º–∏–Ω—É
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/answerCallbackQuery`, {
          callback_query_id: callbackQuery.id,
          text: '‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!'
        });

        // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/editMessageCaption`, {
          chat_id: ADMIN_ID,
          message_id: messageId,
          caption: callbackQuery.message.caption + '\n\n‚úÖ <b>–û–ü–õ–ê–¢–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê</b>',
          parse_mode: 'HTML'
        });
      }

      // –ê–¥–º–∏–Ω –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –æ–ø–ª–∞—Ç—É
      if (data.startsWith('reject_payment_')) {
        const orderId = data.replace('reject_payment_', '');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        const { data: order } = await supabase
          .from('orders')
          .select('*')
          .eq('id', orderId)
          .single();

        if (order && order.telegram_user_id) {
          // –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
          await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            chat_id: order.telegram_user_id,
            text: `‚ùå <b>–ß–µ–∫ –Ω–µ –ø—Ä–∏–Ω—è—Ç</b>\n\nüìã –ó–∞–∫–∞–∑ #${orderId.slice(-6)}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–µ–∫ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.`,
            parse_mode: 'HTML'
          });
        }

        // –û—Ç–≤–µ—á–∞–µ–º –∞–¥–º–∏–Ω—É
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/answerCallbackQuery`, {
          callback_query_id: callbackQuery.id,
          text: '‚ùå –ß–µ–∫ –æ—Ç–∫–ª–æ–Ω—ë–Ω'
        });

        // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/editMessageCaption`, {
          chat_id: ADMIN_ID,
          message_id: messageId,
          caption: callbackQuery.message.caption + '\n\n‚ùå <b>–ß–ï–ö –û–¢–ö–õ–û–ù–Å–ù</b>',
          parse_mode: 'HTML'
        });
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ (—á–µ–∫–∞)
    if (update.message && update.message.photo) {
      const chatId = update.message.chat.id;
      const photo = update.message.photo[update.message.photo.length - 1]; // –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–¥—ë–º –ª–∏ –º—ã —Ñ–æ—Ç–æ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const orderId = pendingReceipts.get(`waiting_${chatId}`);
      
      if (orderId) {
        const orderInfo = pendingReceipts.get(orderId);
        
        if (orderInfo) {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ–∫ –∞–¥–º–∏–Ω—É
          let caption = "üì∏ <b>–ß–ï–ö –û–ë –û–ü–õ–ê–¢–ï</b>\n\n";
          caption += `üìã –ó–∞–∫–∞–∑ #${orderInfo.orderNumber}\n`;
          caption += `üë§ ${orderInfo.customerName}\n`;
          caption += `üí∞ ${orderInfo.total} ‚Ç∏\n`;
          caption += `ID: ${orderInfo.userId}`;

          await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`, {
            chat_id: ADMIN_ID,
            photo: photo.file_id,
            caption: caption,
            parse_mode: 'HTML',
            reply_markup: {
              inline_keyboard: [[
                { text: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data: `confirm_payment_${orderId}` },
                { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data: `reject_payment_${orderId}` }
              ]]
            }
          });

          // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É
          await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            chat_id: chatId,
            text: "‚úÖ <b>–ß–µ–∫ –ø–æ–ª—É—á–µ–Ω!</b>\n\n–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ª–∞—Ç—É –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.\n\nüá∞üáø <b>–ß–µ–∫ –∞–ª—ã–Ω–¥—ã!</b>\n–¢”©–ª–µ–º–¥—ñ —Ç–µ–∫—Å–µ—Ä—ñ–ø, –∂–∞“õ—ã–Ω–¥–∞ —Å—ñ–∑–±–µ–Ω —Ö–∞–±–∞—Ä–ª–∞—Å–∞–º—ã–∑.",
            parse_mode: 'HTML'
          });

          // –£–¥–∞–ª—è–µ–º –∏–∑ –æ–∂–∏–¥–∞–Ω–∏—è
          pendingReceipts.delete(`waiting_${chatId}`);
        }
      }
    }

    res.json({ ok: true });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    res.json({ ok: true }); // –í—Å—ë —Ä–∞–≤–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º ok, —á—Ç–æ–±—ã Telegram –Ω–µ —Å–ø–∞–º–∏–ª
  }
}

// API: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
app.post('/api/setup-webhook', async (req, res) => {
  try {
    const webhookUrl = `${req.protocol}://${req.get('host')}/bot${BOT_TOKEN}`;
    
    const response = await axios.post(
      `https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`,
      { url: webhookUrl }
    );

    res.json({ 
      success: true, 
      webhookUrl,
      telegram: response.data 
    });
  } catch (error) {
    res.status(500).json({ 
      error: '–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook',
      details: error.message 
    });
  }
});

// API: –ü–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á Supabase
app.get('/api/config', (req, res) => {
  res.json({
    supabaseUrl: SUPABASE_URL,
    supabaseKey: SUPABASE_KEY
  });
});

// Healthcheck
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'ok',
    botConfigured: !!BOT_TOKEN,
    supabaseConfigured: !!(SUPABASE_URL && SUPABASE_KEY),
    adminConfigured: !!ADMIN_ID
  });
});

app.get('/health', (req, res) => {
  res.json({ 
    status: 'ok',
    botConfigured: !!BOT_TOKEN
  });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
async function setupWebhookOnStartup() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL –≥–¥–µ –∑–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–µ—Ä
    const webhookUrl = `https://telegram-miniapp-fd6b.onrender.com/webhook`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    const checkResponse = await axios.get(
      `https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`
    );
    
    const currentWebhook = checkResponse.data.result.url;
    
    // –ï—Å–ª–∏ webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (currentWebhook === webhookUrl) {
      console.log(`‚úÖ Webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    console.log(`üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: ${webhookUrl}...`);
    const setResponse = await axios.post(
      `https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`,
      { url: webhookUrl }
    );
    
    if (setResponse.data.ok) {
      console.log(`‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:`, setResponse.data);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:`, error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì± Telegram Bot: ${BOT_TOKEN ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`üóÑÔ∏è  Supabase: ${SUPABASE_URL ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
  console.log(`\nüîó Webhook endpoints:`);
  console.log(`   POST /webhook (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)`);
  console.log(`   POST /bot${BOT_TOKEN}`);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
  if (BOT_TOKEN) {
    console.log('');
    await setupWebhookOnStartup();
  }
  
  console.log('');
});
